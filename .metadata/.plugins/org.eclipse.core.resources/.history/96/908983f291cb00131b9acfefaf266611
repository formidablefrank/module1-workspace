package com.example.edemo.service;

import java.math.BigDecimal;

import com.example.edemo.dao.BankAccountDao;
import com.example.edemo.dao.BankAccountExampleDao;
import com.example.edemo.model.BankAccount;

public class BankAccountServiceImpl implements BankAccountService {
	private BankAccountDao bankAccountDao;
	
	public BankAccountServiceImpl(){
		super();
		this.bankAccountDao = new BankAccountExampleDao();
	}
	
	@Override
	public void transferFunds(String sourceAccountNumber,
			String targetAccountNumber, BigDecimal amountToTransfer) {
		
		
		//check if first account exists (fetch it)
		BankAccount sourceAccount = bankAccountDao.findAccount(sourceAccountNumber);
		//check if second account exists (fetch it)
		BankAccount targetAccount = bankAccountDao.findAccount(targetAccountNumber);
		//check if there is enough balance
		
		//transfer funds
		BigDecimal sourceBalance = sourceAccount.getBalance();
		BigDecimal targetBalance = targetAccount.getBalance();
		sourceAccount.setBalance(sourceBalance.subtract(amountToTransfer));
		targetAccount.setBalance(targetBalance.add(amountToTransfer));
		//update first account
		bankAccountDao.updateAccount(sourceAccount);
		//update second account
		bankAccountDao.updateAccount(targetAccount);
	}

	@Override
	public BankAccount findAccount(String sourceAccountNumber) {
		return this.bankAccountDao.findAccount(sourceAccountNumber);
	}

}
